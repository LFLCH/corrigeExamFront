(()=>{"use strict";class se{constructor(e){e?(this.alphabet="abcdefghijklmnopqrstuvwxyz",this.characters="0123456789"+this.alphabet.toUpperCase()+this.alphabet):this.characters="0123456789",this.isWarmedUp=this.loadModel(e).then().then(()=>console.info("Backend running on:",tf.getBackend()))}loadModel(e){return console.time("Load model"),e?tf.loadLayersModel("content/classifier/letteranddigitclassifier/model.json").then(l=>{this._model=l,console.timeEnd("Load model")}):tf.loadLayersModel("content/classifier/digitclassifier/model.json").then(l=>{this._model=l,console.timeEnd("Load model")})}warmUp(){console.time("Warmup"),this._model.predict(tf.randomNormal([1,28,28,1])).as1D().dataSync(),console.timeEnd("Warmup")}preprocessImage(e){const x=e.width>e.height,r=Math.round((Math.max(e.width,e.height)-Math.min(e.width,e.height))/2),m=x?[[r,r],[0,0],[0,0]]:[[0,0],[r,r],[0,0]];return tf.tidy(()=>{let h=tf.browser.fromPixels(e,1).pad(m,255);return h=tf.image.resizeBilinear(h,[24,24]).pad([[2,2],[2,2],[0,0]],255),h=tf.scalar(1).sub(h.toFloat().div(tf.scalar(255))),h.expandDims(0)})}predict(e){if(!this._model)return console.warn("Model not loaded yet!");const l=this.preprocessImage(e),c=this._model.predict(l).as1D(),w=c.argMax().dataSync()[0],x=c.max().dataSync()[0];return[this.characters[w],x]}}let ie,ae;function re(i,e){let l=cv.matFromImageData(i.payload.image);const c=function we(i){return i?(void 0===ie&&(ie=new se(i)),ie):(void 0===ae&&(ae=new se(i)),ae)}(e);c.isWarmedUp.then(()=>{const w=function ye(i,e,l,c,w){const x=function Me(i,e,l){let o=i.clone(),N=new cv.Mat;cv.cvtColor(i,N,cv.COLOR_BGR2GRAY,0);let G=new cv.Mat;cv.threshold(N,G,0,255,cv.THRESH_BINARY_INV+cv.THRESH_OTSU);let W=new cv.Point(-1,-1);if(e){let v=new cv.Mat,z=new cv.Size(1,15),s=cv.getStructuringElement(cv.MORPH_RECT,z);cv.morphologyEx(G,v,cv.MORPH_OPEN,s,W,2,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let P=new cv.MatVector,C=new cv.Mat;cv.findContours(v,P,C,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);let b=new cv.Scalar(255,255,255);cv.drawContours(o,P,-1,b,4);let n=new cv.Mat,t=new cv.Size(15,1),a=cv.getStructuringElement(cv.MORPH_RECT,t),E=new cv.Point(-1,-1);cv.morphologyEx(G,n,cv.MORPH_OPEN,a,E,2,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let A=new cv.MatVector,g=new cv.Mat;cv.findContours(n,A,g,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);let f=new cv.Scalar(255,255,255);cv.drawContours(o,A,-1,f,4),v.delete(),P.delete(),C.delete(),s.delete(),n.delete(),A.delete(),g.delete(),a.delete()}let H=new cv.Size(3,3),u=cv.getStructuringElement(cv.MORPH_ELLIPSE,H),T=new cv.Mat,j=cv.Mat.ones(i.rows,i.cols,cv.CV_8UC3);j.setTo(new cv.Scalar(255,255,255)),cv.cvtColor(j,j,cv.COLOR_BGR2GRAY,0);let p=new cv.Mat;cv.cvtColor(o,p,cv.COLOR_BGR2GRAY,0);let L=new cv.Mat;cv.subtract(j,p,L,T,-1);let y=new cv.Mat;cv.dilate(L,y,u,W,3,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let S=new cv.Mat,B=new cv.Mat;cv.bitwise_and(y,G,S),cv.morphologyEx(S,B,cv.MORPH_CLOSE,u,W,3,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let I=new cv.Mat;cv.bitwise_and(B,G,I);let k=new cv.Mat;cv.subtract(j,I,k,T,-1);let M=new cv.MatVector,D=new cv.Mat;cv.findContours(I,M,D,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);const U=new Map;let _=[];for(let v=0;v<M.size();v++){let z=M.get(v),s=cv.boundingRect(z);(s.width>12||s.height>12)&&(s.width>s.height?(s.y=s.y-(s.width-s.height)/2,s.height=s.width):(s.x=s.x-(s.height-s.width)/2,s.width=s.height),_.push(s))}_.forEach(v=>{let z=new cv.Scalar(0,0,0),s=new cv.Point(v.x,v.y),P=new cv.Point(v.x+v.width,v.y+v.height),C=new cv.Mat,b=new cv.Mat,n=new cv.Mat;C=Q(k,v);let t=new cv.Size(26,26);cv.resize(C,b,t,0,0,cv.INTER_AREA);let a=new cv.Scalar(255,0,0,255);cv.copyMakeBorder(b,n,1,1,1,1,cv.BORDER_CONSTANT,a),U.set(v,n),C.delete(),b.delete(),cv.rectangle(k,s,P,z,2,cv.LINE_AA,0)}),N.delete(),G.delete(),u.delete(),T.delete(),j.delete(),p.delete(),L.delete(),y.delete(),o.delete(),S.delete(),B.delete(),I.delete(),M.delete(),D.delete();let d=[...U];if(d.sort((v,z)=>v[0].x<z[0].x?-1:1),l&&d.length>3){const v=(d[d.length-1][0].x-d[0][0].x)/d.length;let z=v,s=0,P=0,C=800;const b=[];for(let t=0;t<d.length-1;t++){let a=d[t+1][0].x-d[t][0].x;a<z&&(z=a),a>1.7*v&&b.push(t),d[t][0].y<C&&(C=d[t][0].y),d[t][0].height>s&&(s=d[t][0].height),d[t][0].width>P&&(P=d[t][0].width)}const n=(d[d.length-1][0].x-d[0][0].x)/(d.length+b.length);b.forEach(t=>{let a=d[t][0].x+n,E=new cv.Scalar(0,0,0),A=new cv.Point(a,C),g=new cv.Point(a+P,C+s),f=new cv.Rect(a,C,P,s),R=new cv.Mat,O=new cv.Mat,Y=new cv.Mat;R=Q(k,f);let K=new cv.Size(26,26);cv.resize(R,O,K,0,0,cv.INTER_AREA);let le=new cv.Scalar(255,0,0,255);cv.copyMakeBorder(O,Y,1,1,1,1,cv.BORDER_CONSTANT,le),U.set(f,Y),R.delete(),O.delete(),cv.rectangle(k,A,g,E,2,cv.LINE_AA,0)}),d=[...U],d.sort((t,a)=>t[0].x<a[0].x?-1:1)}return{letter:d,invert_final:k}}(i,!1,c);let r=[];e.forEach(h=>{r.push([h.padEnd(13," "),0])});const m=[];for(let h=0;h<x.letter.length;h++){let o=l.predict(F(x.letter[h][1]));w&&("1"===o[0]&&(o[0]="i"),"0"===o[0]&&(o[0]="o"),"5"===o[0]&&(o[0]="s"),"3"===o[0]&&(o[0]="b"),"9"===o[0]&&(o[0]="g")),m.push(o)}for(let h=0;h<r.length;h++){for(let o=0;o<13;o++)o<m.length&&(r[h][1]=r[h][0].substring(o,o+1).toLowerCase()===m[o][0].toLowerCase()?r[h][1]+m[o][1]:r[h][1]+(1-m[o][1])/35);r[h][1]=r[h][1]/m.length}return r.sort((h,o)=>h[1]<o[1]?1:-1),r[0][0]=r[0][0].trim(),{debug:x.invert_final,solution:r[0]}}(l,i.payload.match,c,!0,e);postMessage({msg:i.msg,payload:{debug:F(w.debug),solution:w.solution},uid:i.uid}),w.debug.delete(),l.delete()})}function F(i){const e=new cv.Mat,l=i.type()%8,c=l<=cv.CV_8S?1:l<=cv.CV_32S?1/256:255,w=l===cv.CV_8S||l===cv.CV_16S?128:0;switch(i.convertTo(e,cv.CV_8U,c,w),e.type()){case cv.CV_8UC1:cv.cvtColor(e,e,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(e,e,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}const x=new ImageData(new Uint8ClampedArray(e.data),e.cols,e.rows);return e.delete(),x}function Q(i,e,l){const c=i.size().width,w=i.size().height;return e.x+e.width>c&&(e.width=c-e.x),e.y+e.height>w&&(e.height=w-e.y),e.x<0&&(e.x=0),e.y<0&&(e.y=0),i.roi(e)}addEventListener("message",i=>{switch(i.data.msg){case"hello":postMessage({msg:`worker response to ${i.data.msg}`,uid:i.data.uid});break;case"load":{const e=self;e.Module={scriptUrl:"content/opencv/4/opencv.js",onRuntimeInitialized(){cv.then(l=>{cv=l,l.ready.then(()=>postMessage({msg:"opencvready",uid:i.data.uid}))})}},e.importScripts(e.Module.scriptUrl),e.importScripts("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs");break}case"imageProcessing":return function ge(i){const e=cv.matFromImageData(i.payload);let l=new cv.Mat;cv.cvtColor(e,l,cv.COLOR_BGR2GRAY),postMessage({msg:i.msg,payload:F(l),uid:i.uid}),e.delete(),l.delete()}(i.data);case"imageAlignement":return function me(i){if(i.payload.marker){const e=function ue(i){let r,m,h,o,N,G,W,H,u,T,V,j,e=cv.matFromImageData(i.imageA),l=new cv.Mat,c=new cv.Mat;cv.cvtColor(e,e,cv.COLOR_RGBA2GRAY),cv.HoughCircles(e,c,cv.HOUGH_GRADIENT,1,45,75,20,6*e.cols/1e3,20*e.cols/1e3),c.cols>0&&(r=c.data32F[0],m=c.data32F[1],h=c.data32F[2],o=c.data32F[0],N=c.data32F[1],G=c.data32F[2],W=c.data32F[0],H=c.data32F[1],u=c.data32F[2],T=c.data32F[0],V=c.data32F[1],j=c.data32F[2]);const p=e.size().width,L=e.size().height;if(c.cols>0)for(let n=1;n<c.cols;n++){let t=c.data32F[3*n],a=c.data32F[3*n+1],E=c.data32F[3*n+2];t*t+a*a<=r*r+m*m&&(r=t,m=a,h=E),t*t+a*a>=T*T+V*V&&(T=t,V=a,j=E),(p-t)*(p-t)+a*a<=(p-o)*(p-o)+N*N&&(o=t,N=a,G=E),t*t+(L-a)*(L-a)<=W*W+(L-H)*(L-H)&&(W=t,H=a,u=E)}let y=cv.matFromImageData(i.imageB),S=new cv.Mat,B=new cv.Mat;cv.cvtColor(y,S,cv.COLOR_RGBA2GRAY);const I=S.size().width,k=S.size().height;cv.HoughCircles(S,B,cv.HOUGH_GRADIENT,1,45,75,15,u-3,u+3);let M=[],D=[];const U=150*(4*u*u-3.14159*u*u)/100;for(let n=0;n<B.cols;n++){let t=B.data32F[3*n],a=B.data32F[3*n+1];const E=t-u,A=a-u;let g=2*u,f=2*u;E+g>I&&(g=I-E),A+f>k&&(f=k-A);let R=new cv.Rect(t-u,a-u,g,f),O=new cv.Mat;O=Q(S,R),cv.threshold(O,O,0,255,cv.THRESH_OTSU+cv.THRESH_BINARY),cv.countNonZero(O)<U&&(M.push(t),D.push(a)),O.delete()}let _,d,v,z,s,P,C,b;if(M.length>0&&(_=M[0],d=D[1],v=M[0],z=D[1],s=M[0],P=D[1],C=M[0],b=D[1]),M.length>1)for(let n=0;n<M.length;n++){let t=M[n],a=D[n];t*t+a*a<=_*_+d*d&&(_=t,d=a),t*t+a*a>=C*C+b*b&&(C=t,b=a),(I-t)*(I-t)+a*a<=(I-v)*(I-v)+z*z&&(v=t,z=a),t*t+(k-a)*(k-a)<=s*s+(k-P)*(k-P)&&(s=t,P=a)}if(M.length>=4){let n=cv.matFromArray(4,1,cv.CV_32FC2,[r,m,o,N,W,H,T,V]),t=cv.matFromArray(4,1,cv.CV_32FC2,[_,d,v,z,s,P,C,b]),a=cv.findHomography(t,n,cv.RANSAC),E=new cv.Size(e.cols,e.rows);if(a.empty())return void console.log("homography matrix empty!");cv.warpPerspective(y,l,a,E);let A=l.clone();for(let f=0;f<t.rows;++f){let Y=15,K=new cv.Point(t.data32F[2*f],t.data32F[2*f+1]);cv.circle(y,K,Y,[0,0,255,255],1)}for(let f=0;f<n.rows;++f){let Y=15,K=new cv.Point(n.data32F[2*f],n.data32F[2*f+1]);cv.circle(e,K,Y,[0,0,255,255],1),cv.circle(A,K,Y,[0,0,255,255],1)}let g={};return g.keypoints1=F(e),g.keypoints1Width=e.size().width,g.keypoints1Height=e.size().height,g.keypoints2=F(l),g.keypoints2Width=l.size().width,g.keypoints2Height=l.size().height,g.imageCompareMatches=F(y),g.imageCompareMatchesWidth=y.size().width,g.imageCompareMatchesHeight=y.size().height,g.imageAligned=F(A),g.imageAlignedWidth=A.size().width,g.imageAlignedHeight=A.size().height,e.delete(),l.delete(),c.delete(),S.delete(),y.delete(),B.delete(),n.delete(),t.delete(),A.delete(),g}{let n=new cv.KeyPointVector,t=new cv.KeyPointVector,a=new cv.Mat,E=new cv.Mat,A=new cv.AKAZE,g=new cv.Mat,f=new cv.Mat;A.detectAndCompute(S,g,n,a),A.detectAndCompute(e,f,t,E);let R=new cv.DMatchVector,O=new cv.BFMatcher,Y=new cv.DMatchVectorVector;O.knnMatch(a,E,Y,2);for(let q=0;q<Y.size();++q){let he=Y.get(q),ve=he.get(0),_e=he.get(1);ve.distance<=_e.distance*parseFloat("0.7")&&R.push_back(ve)}let K=new cv.Mat,le=new cv.Scalar(0,255,0,255);cv.drawMatches(y,n,e,t,R,K,le);let X={};X.imageCompareMatches=F(K),X.imageCompareMatchesWidth=K.size().width,X.imageCompareMatchesHeight=K.size().height;let Z=new cv.Mat,$=new cv.Mat,de=new cv.Scalar(0,255,0,255);cv.drawKeypoints(S,n,Z,de),cv.drawKeypoints(e,t,$,de),X.keypoints1=F(Z),X.keypoints1Width=Z.size().width,X.keypoints1Height=Z.size().height,X.keypoints2=F($),X.keypoints2Width=$.size().width,X.keypoints2Height=$.size().height;let ee=[],te=[];for(let q=0;q<R.size();q++)ee.push(n.get(R.get(q).queryIdx).pt.x),ee.push(n.get(R.get(q).queryIdx).pt.y),te.push(t.get(R.get(q).trainIdx).pt.x),te.push(t.get(R.get(q).trainIdx).pt.y);let ce=new cv.Mat(ee.length,1,cv.CV_32FC2);ce.data32F.set(ee);let oe=new cv.Mat(te.length,1,cv.CV_32FC2);oe.data32F.set(te);let ne=cv.findHomography(ce,oe,cv.RANSAC);if(ne.empty())return void console.log("homography matrix empty!");console.log("h:",ne);let J=new cv.Mat;cv.warpPerspective(S,J,ne,e.size()),X.imageAligned=F(J),X.imageAlignedWidth=J.size().width,X.imageAlignedHeight=J.size().height,J.delete(),ce.delete(),oe.delete(),Z.delete(),$.delete(),K.delete(),Y.delete(),O.delete(),R.delete(),A.delete(),n.delete(),t.delete(),a.delete(),E.delete(),g.delete(),f.delete(),e.delete(),l.delete(),c.delete(),S.delete(),y.delete(),B.delete()}}(i.payload);postMessage({msg:i.msg,payload:e,uid:i.uid})}else{const e=function fe(i,e){let l=cv.matFromImageData(i),c=cv.matFromImageData(e),w=new cv.Mat,x=new cv.Mat;cv.cvtColor(c,w,cv.COLOR_BGRA2GRAY),cv.cvtColor(l,x,cv.COLOR_BGRA2GRAY);let r=new cv.KeyPointVector,m=new cv.KeyPointVector,h=new cv.Mat,o=new cv.Mat,N=new cv.AKAZE,G=new cv.Mat,W=new cv.Mat;N.detectAndCompute(w,G,r,h),N.detectAndCompute(x,W,m,o);let H=new cv.DMatchVector,u=new cv.BFMatcher,T=new cv.DMatchVectorVector;u.knnMatch(h,o,T,2);for(let _=0;_<T.size();++_){let d=T.get(_),v=d.get(0),z=d.get(1);v.distance<=z.distance*parseFloat("0.7")&&H.push_back(v)}let V=new cv.Mat,j=new cv.Scalar(0,255,0,255);cv.drawMatches(c,r,l,m,H,V,j);let p={};p.imageCompareMatches=F(V),p.imageCompareMatchesWidth=V.size().width,p.imageCompareMatchesHeight=V.size().height;let L=new cv.Mat,y=new cv.Mat,S=new cv.Scalar(0,255,0,255);cv.drawKeypoints(w,r,L,S),cv.drawKeypoints(x,m,y,S),p.keypoints1=F(L),p.keypoints1Width=L.size().width,p.keypoints1Height=L.size().height,p.keypoints2=F(y),p.keypoints2Width=y.size().width,p.keypoints2Height=y.size().height;let B=[],I=[];for(let _=0;_<H.size();_++)B.push(r.get(H.get(_).queryIdx).pt.x),B.push(r.get(H.get(_).queryIdx).pt.y),I.push(m.get(H.get(_).trainIdx).pt.x),I.push(m.get(H.get(_).trainIdx).pt.y);let k=new cv.Mat(B.length,1,cv.CV_32FC2);k.data32F.set(B);let M=new cv.Mat(I.length,1,cv.CV_32FC2);M.data32F.set(I);let D=cv.findHomography(k,M,cv.RANSAC);if(D.empty())return void console.log("homography matrix empty!");console.log("h:",D);let U=new cv.Mat;return cv.warpPerspective(c,U,D,l.size()),p.imageAligned=F(U),p.imageAlignedWidth=U.size().width,p.imageAlignedHeight=U.size().height,U.delete(),k.delete(),M.delete(),L.delete(),y.delete(),V.delete(),T.delete(),u.delete(),H.delete(),N.delete(),w.delete(),r.delete(),x.delete(),m.delete(),h.delete(),o.delete(),G.delete(),W.delete(),p}(i.payload.imageA,i.payload.imageB);postMessage({msg:i.msg,payload:e,uid:i.uid})}}(i.data);case"imageCrop":return function pe(i){let e=new cv.Rect(i.payload.x,i.payload.y,i.payload.width,i.payload.height),l=new cv.Mat,c=cv.matFromImageData(i.payload.image);l=Q(c,e),postMessage({msg:i.msg,payload:F(l),uid:i.uid}),l.delete(),c.delete()}(i.data);case"nameprediction":return re(i.data,!0);case"ineprediction":return re(i.data,!1)}})})();