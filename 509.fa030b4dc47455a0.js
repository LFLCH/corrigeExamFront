(()=>{"use strict";class se{constructor(e){e?(this.alphabet="abcdefghijklmnopqrstuvwxyz",this.characters="0123456789"+this.alphabet.toUpperCase()+this.alphabet):this.characters="0123456789",this.isWarmedUp=this.loadModel(e).then().then(()=>console.info("Backend running on:",tf.getBackend()))}loadModel(e){return console.time("Load model"),e?tf.loadLayersModel("content/classifier/letteranddigitclassifier/model.json").then(l=>{this._model=l,console.timeEnd("Load model")}):tf.loadLayersModel("content/classifier/digitclassifier/model.json").then(l=>{this._model=l,console.timeEnd("Load model")})}warmUp(){console.time("Warmup"),this._model.predict(tf.randomNormal([1,28,28,1])).as1D().dataSync(),console.timeEnd("Warmup")}preprocessImage(e){const u=e.width>e.height,s=Math.round((Math.max(e.width,e.height)-Math.min(e.width,e.height))/2),p=u?[[s,s],[0,0],[0,0]]:[[0,0],[s,s],[0,0]];return tf.tidy(()=>{let o=tf.browser.fromPixels(e,1).pad(p,255);return o=tf.image.resizeBilinear(o,[24,24]).pad([[2,2],[2,2],[0,0]],255),o=tf.scalar(1).sub(o.toFloat().div(tf.scalar(255))),o.expandDims(0)})}predict(e){if(!this._model)return console.warn("Model not loaded yet!");const l=this.preprocessImage(e),i=this._model.predict(l).as1D(),g=i.argMax().dataSync()[0],u=i.max().dataSync()[0];return[this.characters[g],u]}}let le,ae;function re(t,e){let l=cv.matFromImageData(t.payload.image);const i=function we(t){return t?(void 0===le&&(le=new se(t)),le):(void 0===ae&&(ae=new se(t)),ae)}(e);i.isWarmedUp.then(()=>{const g=function Me(t,e,l,i,g){const u=function Re(t,e,l){let r=t.clone(),I=new cv.Mat;cv.cvtColor(t,I,cv.COLOR_BGR2GRAY,0);let U=new cv.Mat;cv.threshold(I,U,0,255,cv.THRESH_BINARY_INV+cv.THRESH_OTSU);let Y=new cv.Point(-1,-1);if(e){let d=new cv.Mat,b=new cv.Size(1,15),z=cv.getStructuringElement(cv.MORPH_RECT,b);cv.morphologyEx(U,d,cv.MORPH_OPEN,z,Y,2,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let H=new cv.MatVector,n=new cv.Mat;cv.findContours(d,H,n,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);let a=new cv.Scalar(255,255,255);cv.drawContours(r,H,-1,a,4);let c=new cv.Mat,h=new cv.Size(15,1),m=cv.getStructuringElement(cv.MORPH_RECT,h),f=new cv.Point(-1,-1);cv.morphologyEx(U,c,cv.MORPH_OPEN,m,f,2,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let M=new cv.MatVector,A=new cv.Mat;cv.findContours(c,M,A,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);let x=new cv.Scalar(255,255,255);cv.drawContours(r,M,-1,x,4),d.delete(),H.delete(),n.delete(),z.delete(),c.delete(),M.delete(),A.delete(),m.delete()}let O=new cv.Size(3,3),R=cv.getStructuringElement(cv.MORPH_ELLIPSE,O),N=new cv.Mat,X=cv.Mat.ones(t.rows,t.cols,cv.CV_8UC3);X.setTo(new cv.Scalar(255,255,255)),cv.cvtColor(X,X,cv.COLOR_BGR2GRAY,0);let y=new cv.Mat;cv.cvtColor(r,y,cv.COLOR_BGR2GRAY,0);let P=new cv.Mat;cv.subtract(X,y,P,N,-1);let _=new cv.Mat;cv.dilate(P,_,R,Y,3,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let k=new cv.Mat,B=new cv.Mat;cv.bitwise_and(_,U,k),cv.morphologyEx(k,B,cv.MORPH_CLOSE,R,Y,3,cv.BORDER_CONSTANT,cv.morphologyDefaultBorderValue());let F=new cv.Mat;cv.bitwise_and(B,U,F);let S=new cv.Mat;cv.subtract(X,F,S,N,-1);let C=new cv.MatVector,W=new cv.Mat;cv.findContours(F,C,W,cv.RETR_EXTERNAL,cv.CHAIN_APPROX_SIMPLE);const K=new Map;let w=[];for(let d=0;d<C.size();d++){let b=C.get(d),z=cv.boundingRect(b);(z.width>12||z.height>12)&&w.push(z)}let V=de(w),j=0;for(;null!==V&&j<200;)w=w.filter(d=>d!==V.toRemove1&&d!==V.toRemove2),w.push(V.u),V=de(w),j+=1;w.forEach(d=>{let b=new cv.Scalar(0,0,0),z=new cv.Point(d.x,d.y),H=new cv.Point(d.x+d.width,d.y+d.height),n=new cv.Mat,a=new cv.Mat,c=new cv.Mat,h=new cv.Scalar(255,0,0,255);n=Q(S,d),d.width>d.height?cv.copyMakeBorder(n,n,(d.width-d.height)/2,(d.width-d.height)/2,1,1,cv.BORDER_CONSTANT,h):cv.copyMakeBorder(n,n,1,1,(d.height-d.width)/2,(d.height-d.width)/2,cv.BORDER_CONSTANT,h);let m=new cv.Size(26,26);cv.resize(n,a,m,0,0,cv.INTER_AREA),cv.copyMakeBorder(a,c,1,1,1,1,cv.BORDER_CONSTANT,h),K.set(d,c),n.delete(),a.delete(),cv.rectangle(S,z,H,b,2,cv.LINE_AA,0)}),I.delete(),U.delete(),R.delete(),N.delete(),X.delete(),y.delete(),P.delete(),_.delete(),r.delete(),k.delete(),B.delete(),F.delete(),C.delete(),W.delete();let v=[...K];if(v.sort((d,b)=>d[0].x<b[0].x?-1:1),l&&v.length>3){const d=(v[v.length-1][0].x-v[0][0].x)/v.length;let b=d,z=0,H=0,n=800;const a=[];for(let h=0;h<v.length-1;h++){let m=v[h+1][0].x-v[h][0].x;m<b&&(b=m),m>1.7*d&&a.push(h),v[h][0].y<n&&(n=v[h][0].y),v[h][0].height>z&&(z=v[h][0].height),v[h][0].width>H&&(H=v[h][0].width)}const c=(v[v.length-1][0].x-v[0][0].x)/(v.length+a.length);a.forEach(h=>{let m=v[h][0].x+c,f=new cv.Scalar(0,0,0),M=new cv.Point(m,n),A=new cv.Point(m+H,n+z),x=new cv.Rect(m,n,H,z),D=new cv.Mat,L=new cv.Mat,ee=new cv.Mat;D=Q(S,x);let G=new cv.Size(26,26);cv.resize(D,L,G,0,0,cv.INTER_AREA);let Z=new cv.Scalar(255,0,0,255);cv.copyMakeBorder(L,ee,1,1,1,1,cv.BORDER_CONSTANT,Z),K.set(x,ee),D.delete(),L.delete(),cv.rectangle(S,M,A,f,2,cv.LINE_AA,0)}),v=[...K],v.sort((h,m)=>h[0].x<m[0].x?-1:1)}return{letter:v,invert_final:S}}(t,!1,i);let s=[];e.forEach(o=>{s.push([o.padEnd(13," "),0])});const p=[];for(let o=0;o<u.letter.length;o++){let r=l.predict(E(u.letter[o][1]));g&&("1"===r[0]&&(r[0]="i"),"0"===r[0]&&(r[0]="o"),"5"===r[0]&&(r[0]="s"),"3"===r[0]&&(r[0]="b"),"9"===r[0]&&(r[0]="g")),p.push(r)}for(let o=0;o<s.length;o++){for(let r=0;r<13;r++)r<p.length&&(s[o][1]=s[o][0].substring(r,r+1).toLowerCase()===p[r][0].toLowerCase()?s[o][1]+p[r][1]:g?s[o][1]+(1-p[r][1])/35:s[o][1]+(1-p[r][1])/9);s[o][1]=s[o][1]/p.length}for(let o=0;o<s.length;o++)s[o][0]=s[o][0].trim(),s[o][1]=s[o][1]-Math.abs(s[o][0].length-p.length)/s[o][0].length;return s.sort((o,r)=>o[1]<r[1]?1:-1),{debug:u.invert_final,solution:s[0]}}(l,t.payload.match,i,!0,e);postMessage({msg:t.msg,payload:{debug:E(g.debug),solution:g.solution},uid:t.uid}),g.debug.delete(),l.delete()})}function E(t){const e=new cv.Mat,l=t.type()%8,i=l<=cv.CV_8S?1:l<=cv.CV_32S?1/256:255,g=l===cv.CV_8S||l===cv.CV_16S?128:0;switch(t.convertTo(e,cv.CV_8U,i,g),e.type()){case cv.CV_8UC1:cv.cvtColor(e,e,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(e,e,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}const u=new ImageData(new Uint8ClampedArray(e.data),e.cols,e.rows);return e.delete(),u}function Q(t,e,l){const i=t.size().width,g=t.size().height;return e.x+e.width>i&&(e.width=i-e.x),e.y+e.height>g&&(e.height=g-e.y),e.x<0&&(e.x=0),e.y<0&&(e.y=0),t.roi(e)}function _e(t,e){let l=e,i=t,g=t,u=e;t.x>e.x&&(l=t,i=e),t.y>e.y&&(g=e,u=t),t.right=t.x+t.width,e.right=e.x+e.width,t.bottom=t.y+t.height,e.bottom=e.y+e.height;let s=e,p=t,o=e,r=t;return t.right>e.right&&(s=t,p=e),t.bottom>e.bottom&&(o=t,r=e),l.x<i.right&&u.y>g.y+g.height?new cv.Rect(i.x,r.y,s.right-i.x,o.bottom-g.y):l.x>i.x+i.width+5||u.y>g.y+g.height?null:new cv.Rect(i.x,r.y,s.right-i.x,o.bottom-g.y)}function de(t){for(let e=0;e<t.length-1;e++){const l=t[e];for(let i=e+1;i<t.length;i++){const g=t[i],u=_e(l,g);if(null!==u)return{u,toRemove1:l,toRemove2:g}}}return null}addEventListener("message",t=>{switch(t.data.msg){case"hello":postMessage({msg:`worker response to ${t.data.msg}`,uid:t.data.uid});break;case"load":{const e=self;e.Module={scriptUrl:"content/opencv/4/opencv.js",onRuntimeInitialized(){cv.then(l=>{cv=l,l.ready.then(()=>postMessage({msg:"opencvready",uid:t.data.uid}))})}},e.importScripts(e.Module.scriptUrl),e.importScripts("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs");break}case"imageProcessing":return function me(t){const e=cv.matFromImageData(t.payload);let l=new cv.Mat;cv.cvtColor(e,l,cv.COLOR_BGR2GRAY),postMessage({msg:t.msg,payload:E(l),uid:t.uid}),e.delete(),l.delete()}(t.data);case"imageAlignement":return function pe(t){if(t.payload.marker){const e=function fe(t){let s,p,o,r,I,U,Y,O,R,N,T,X,e=cv.matFromImageData(t.imageA),l=new cv.Mat,i=new cv.Mat;cv.cvtColor(e,e,cv.COLOR_RGBA2GRAY),cv.HoughCircles(e,i,cv.HOUGH_GRADIENT,1,45,75,20,6*e.cols/1e3,20*e.cols/1e3),i.cols>0&&(s=i.data32F[0],p=i.data32F[1],o=i.data32F[2],r=i.data32F[0],I=i.data32F[1],U=i.data32F[2],Y=i.data32F[0],O=i.data32F[1],R=i.data32F[2],N=i.data32F[0],T=i.data32F[1],X=i.data32F[2]);const y=e.size().width,P=e.size().height;if(i.cols>0)for(let n=1;n<i.cols;n++){let a=i.data32F[3*n],c=i.data32F[3*n+1],h=i.data32F[3*n+2];a*a+c*c<=s*s+p*p&&(s=a,p=c,o=h),a*a+c*c>=N*N+T*T&&(N=a,T=c,X=h),(y-a)*(y-a)+c*c<=(y-r)*(y-r)+I*I&&(r=a,I=c,U=h),a*a+(P-c)*(P-c)<=Y*Y+(P-O)*(P-O)&&(Y=a,O=c,R=h)}let _=cv.matFromImageData(t.imageB),k=new cv.Mat,B=new cv.Mat;cv.cvtColor(_,k,cv.COLOR_RGBA2GRAY);const F=k.size().width,S=k.size().height;cv.HoughCircles(k,B,cv.HOUGH_GRADIENT,1,45,75,15,R-3,R+3);let C=[],W=[];const K=150*(4*R*R-3.14159*R*R)/100;for(let n=0;n<B.cols;n++){let a=B.data32F[3*n],c=B.data32F[3*n+1];const h=a-R,m=c-R;let f=2*R,M=2*R;h+f>F&&(f=F-h),m+M>S&&(M=S-m);let A=new cv.Rect(a-R,c-R,f,M),x=new cv.Mat;x=Q(k,A),cv.threshold(x,x,0,255,cv.THRESH_OTSU+cv.THRESH_BINARY),cv.countNonZero(x)<K&&(C.push(a),W.push(c)),x.delete()}let w,V,j,v,d,b,z,H;if(C.length>0&&(w=C[0],V=W[1],j=C[0],v=W[1],d=C[0],b=W[1],z=C[0],H=W[1]),C.length>1)for(let n=0;n<C.length;n++){let a=C[n],c=W[n];a*a+c*c<=w*w+V*V&&(w=a,V=c),a*a+c*c>=z*z+H*H&&(z=a,H=c),(F-a)*(F-a)+c*c<=(F-j)*(F-j)+v*v&&(j=a,v=c),a*a+(S-c)*(S-c)<=d*d+(S-b)*(S-b)&&(d=a,b=c)}if(C.length>=4){let n=cv.matFromArray(4,1,cv.CV_32FC2,[s,p,r,I,Y,O,N,T]),a=cv.matFromArray(4,1,cv.CV_32FC2,[w,V,j,v,d,b,z,H]),c=cv.findHomography(a,n,cv.RANSAC),h=new cv.Size(e.cols,e.rows);if(c.empty())return void console.log("homography matrix empty!");cv.warpPerspective(_,l,c,h);let m=l.clone();for(let M=0;M<a.rows;++M){let D=15,L=new cv.Point(a.data32F[2*M],a.data32F[2*M+1]);cv.circle(_,L,D,[0,0,255,255],1)}for(let M=0;M<n.rows;++M){let D=15,L=new cv.Point(n.data32F[2*M],n.data32F[2*M+1]);cv.circle(e,L,D,[0,0,255,255],1),cv.circle(m,L,D,[0,0,255,255],1)}let f={};return f.keypoints1=E(e),f.keypoints1Width=e.size().width,f.keypoints1Height=e.size().height,f.keypoints2=E(l),f.keypoints2Width=l.size().width,f.keypoints2Height=l.size().height,f.imageCompareMatches=E(_),f.imageCompareMatchesWidth=_.size().width,f.imageCompareMatchesHeight=_.size().height,f.imageAligned=E(m),f.imageAlignedWidth=m.size().width,f.imageAlignedHeight=m.size().height,e.delete(),l.delete(),i.delete(),k.delete(),_.delete(),B.delete(),n.delete(),a.delete(),m.delete(),f}{let n=new cv.KeyPointVector,a=new cv.KeyPointVector,c=new cv.Mat,h=new cv.Mat,m=new cv.AKAZE,f=new cv.Mat,M=new cv.Mat;m.detectAndCompute(k,f,n,c),m.detectAndCompute(e,M,a,h);let A=new cv.DMatchVector,x=new cv.BFMatcher,D=new cv.DMatchVectorVector;x.knnMatch(c,h,D,2);for(let q=0;q<D.size();++q){let ge=D.get(q),ve=ge.get(0),Ce=ge.get(1);ve.distance<=Ce.distance*parseFloat("0.7")&&A.push_back(ve)}let L=new cv.Mat,ee=new cv.Scalar(0,255,0,255);cv.drawMatches(_,n,e,a,A,L,ee);let G={};G.imageCompareMatches=E(L),G.imageCompareMatchesWidth=L.size().width,G.imageCompareMatchesHeight=L.size().height;let Z=new cv.Mat,$=new cv.Mat,he=new cv.Scalar(0,255,0,255);cv.drawKeypoints(k,n,Z,he),cv.drawKeypoints(e,a,$,he),G.keypoints1=E(Z),G.keypoints1Width=Z.size().width,G.keypoints1Height=Z.size().height,G.keypoints2=E($),G.keypoints2Width=$.size().width,G.keypoints2Height=$.size().height;let te=[],ie=[];for(let q=0;q<A.size();q++)te.push(n.get(A.get(q).queryIdx).pt.x),te.push(n.get(A.get(q).queryIdx).pt.y),ie.push(a.get(A.get(q).trainIdx).pt.x),ie.push(a.get(A.get(q).trainIdx).pt.y);let oe=new cv.Mat(te.length,1,cv.CV_32FC2);oe.data32F.set(te);let ne=new cv.Mat(ie.length,1,cv.CV_32FC2);ne.data32F.set(ie);let ce=cv.findHomography(oe,ne,cv.RANSAC);if(ce.empty())return void console.log("homography matrix empty!");console.log("h:",ce);let J=new cv.Mat;cv.warpPerspective(k,J,ce,e.size()),G.imageAligned=E(J),G.imageAlignedWidth=J.size().width,G.imageAlignedHeight=J.size().height,J.delete(),oe.delete(),ne.delete(),Z.delete(),$.delete(),L.delete(),D.delete(),x.delete(),A.delete(),m.delete(),n.delete(),a.delete(),c.delete(),h.delete(),f.delete(),M.delete(),e.delete(),l.delete(),i.delete(),k.delete(),_.delete(),B.delete()}}(t.payload);postMessage({msg:t.msg,payload:e,uid:t.uid})}else{const e=function ye(t,e){let l=cv.matFromImageData(t),i=cv.matFromImageData(e),g=new cv.Mat,u=new cv.Mat;cv.cvtColor(i,g,cv.COLOR_BGRA2GRAY),cv.cvtColor(l,u,cv.COLOR_BGRA2GRAY);let s=new cv.KeyPointVector,p=new cv.KeyPointVector,o=new cv.Mat,r=new cv.Mat,I=new cv.AKAZE,U=new cv.Mat,Y=new cv.Mat;I.detectAndCompute(g,U,s,o),I.detectAndCompute(u,Y,p,r);let O=new cv.DMatchVector,R=new cv.BFMatcher,N=new cv.DMatchVectorVector;R.knnMatch(o,r,N,2);for(let w=0;w<N.size();++w){let V=N.get(w),j=V.get(0),v=V.get(1);j.distance<=v.distance*parseFloat("0.7")&&O.push_back(j)}let T=new cv.Mat,X=new cv.Scalar(0,255,0,255);cv.drawMatches(i,s,l,p,O,T,X);let y={};y.imageCompareMatches=E(T),y.imageCompareMatchesWidth=T.size().width,y.imageCompareMatchesHeight=T.size().height;let P=new cv.Mat,_=new cv.Mat,k=new cv.Scalar(0,255,0,255);cv.drawKeypoints(g,s,P,k),cv.drawKeypoints(u,p,_,k),y.keypoints1=E(P),y.keypoints1Width=P.size().width,y.keypoints1Height=P.size().height,y.keypoints2=E(_),y.keypoints2Width=_.size().width,y.keypoints2Height=_.size().height;let B=[],F=[];for(let w=0;w<O.size();w++)B.push(s.get(O.get(w).queryIdx).pt.x),B.push(s.get(O.get(w).queryIdx).pt.y),F.push(p.get(O.get(w).trainIdx).pt.x),F.push(p.get(O.get(w).trainIdx).pt.y);let S=new cv.Mat(B.length,1,cv.CV_32FC2);S.data32F.set(B);let C=new cv.Mat(F.length,1,cv.CV_32FC2);C.data32F.set(F);let W=cv.findHomography(S,C,cv.RANSAC);if(W.empty())return void console.log("homography matrix empty!");console.log("h:",W);let K=new cv.Mat;return cv.warpPerspective(i,K,W,l.size()),y.imageAligned=E(K),y.imageAlignedWidth=K.size().width,y.imageAlignedHeight=K.size().height,K.delete(),S.delete(),C.delete(),P.delete(),_.delete(),T.delete(),N.delete(),R.delete(),O.delete(),I.delete(),g.delete(),s.delete(),u.delete(),p.delete(),o.delete(),r.delete(),U.delete(),Y.delete(),y}(t.payload.imageA,t.payload.imageB);postMessage({msg:t.msg,payload:e,uid:t.uid})}}(t.data);case"imageCrop":return function ue(t){let e=new cv.Rect(t.payload.x,t.payload.y,t.payload.width,t.payload.height),l=new cv.Mat,i=cv.matFromImageData(t.payload.image);l=Q(i,e),postMessage({msg:t.msg,payload:E(l),uid:t.uid}),l.delete(),i.delete()}(t.data);case"nameprediction":return re(t.data,!0);case"ineprediction":return re(t.data,!1)}})})();