(()=>{"use strict";function n(e){const t=new cv.Mat,a=e.type()%8,i=a<=cv.CV_8S?1:a<=cv.CV_32S?1/256:255,l=a===cv.CV_8S||a===cv.CV_16S?128:0;switch(e.convertTo(t,cv.CV_8U,i,l),t.type()){case cv.CV_8UC1:cv.cvtColor(t,t,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(t,t,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}const r=new ImageData(new Uint8ClampedArray(t.data),t.cols,t.rows);return t.delete(),r}addEventListener("message",e=>{switch(e.data.msg){case"hello":postMessage({msg:`worker response to ${e.data.msg}`,uid:e.data.uid});break;case"load":{const t=self;t.Module={scriptUrl:"content/opencv/4/opencv.js",onRuntimeInitialized(){cv.then(a=>{cv=a,a.ready.then(()=>postMessage({msg:"opencvready",uid:e.data.uid}))})}},self.importScripts(t.Module.scriptUrl);break}case"imageProcessing":return function I(e){const t=cv.matFromImageData(e.payload);let a=new cv.Mat;cv.cvtColor(t,a,cv.COLOR_BGR2GRAY),postMessage({msg:e.msg,payload:n(a),uid:e.uid}),t.delete(),a.delete()}(e.data);case"imageAlignement":return function B(e){const t=function x(e,t){let a=cv.matFromImageData(e),i=cv.matFromImageData(t),l=new cv.Mat,r=new cv.Mat;cv.cvtColor(i,l,cv.COLOR_BGRA2GRAY),cv.cvtColor(a,r,cv.COLOR_BGRA2GRAY);let d=new cv.KeyPointVector,g=new cv.KeyPointVector,C=new cv.Mat,M=new cv.Mat,_=new cv.AKAZE,R=new cv.Mat,V=new cv.Mat;_.detectAndCompute(l,R,d,C),_.detectAndCompute(r,V,g,M);let o=new cv.DMatchVector,z=new cv.BFMatcher,u=new cv.DMatchVectorVector;z.knnMatch(C,M,u,2);for(let s=0;s<u.size();++s){let b=u.get(s),F=b.get(0),S=b.get(1);F.distance<=S.distance*parseFloat("0.7")&&o.push_back(F)}let m=new cv.Mat,D=new cv.Scalar(0,255,0,255);cv.drawMatches(i,d,a,g,o,m,D);let c={};c.imageCompareMatches=n(m),c.imageCompareMatchesWidth=m.size().width,c.imageCompareMatchesHeight=m.size().height;let v=new cv.Mat,p=new cv.Mat,G=new cv.Scalar(0,255,0,255);cv.drawKeypoints(l,d,v,G),cv.drawKeypoints(r,g,p,G),c.keypoints1=n(v),c.keypoints1Width=v.size().width,c.keypoints1Height=v.size().height,c.keypoints2=n(p),c.keypoints2Width=p.size().width,c.keypoints2Height=p.size().height;let y=[],w=[];for(let s=0;s<o.size();s++)y.push(d.get(o.get(s).queryIdx).pt.x),y.push(d.get(o.get(s).queryIdx).pt.y),w.push(g.get(o.get(s).trainIdx).pt.x),w.push(g.get(o.get(s).trainIdx).pt.y);let k=new cv.Mat(y.length,1,cv.CV_32FC2);k.data32F.set(y);let A=new cv.Mat(w.length,1,cv.CV_32FC2);A.data32F.set(w);let f=cv.findHomography(k,A,cv.RANSAC);if(f.empty())return void console.log("homography matrix empty!");console.log("h:",f);let h=new cv.Mat;return cv.warpPerspective(i,h,f,a.size()),c.imageAligned=n(h),c.imageAlignedWidth=h.size().width,c.imageAlignedHeight=h.size().height,h.delete(),k.delete(),A.delete(),v.delete(),p.delete(),m.delete(),u.delete(),z.delete(),o.delete(),_.delete(),l.delete(),d.delete(),r.delete(),g.delete(),C.delete(),M.delete(),R.delete(),V.delete(),c}(e.payload.imageA,e.payload.imageB);postMessage({msg:e.msg,payload:t,uid:e.uid})}(e.data);case"imageCrop":return function O(e){let t=new cv.Rect(e.payload.x,e.payload.y,e.payload.width,e.payload.height),a=new cv.Mat,i=cv.matFromImageData(e.payload.image);a=i.roi(t),postMessage({msg:e.msg,payload:n(a),uid:e.uid}),a.delete(),i.delete()}(e.data)}})})();